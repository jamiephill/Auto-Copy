#!/usr/bin/perl

use strict;

use Getopt::Std ();

my $opts = {};

Getopt::Std::getopts('uv:z', $opts);

usage() if (!exists $opts->{'v'} || $opts->{'v'} !~ /^\d\.\d\.\d$/);

updateOptions($opts->{'v'}) if ($opts->{'u'});
updateJSON('manifest.json', $opts->{'v'}) if ($opts->{'u'});
updateJSON('package.json', $opts->{'v'}) if ($opts->{'u'});

unlink('Auto-Copy.zip');
system(
  "cd .. && zip -r Auto-Copy/Auto-Copy.zip Auto-Copy/LICENSE " .
  "Auto-Copy/manifest.json Auto-Copy/assets/* Auto-Copy/css/* " .
  "Auto-Copy/html/* Auto-Copy/js/*.js"
) if ($opts->{'z'});

sub updateJSON {
  my $name = shift;
  my $ver  = shift;

  open(my $fh, $name) || die("Can't open file: $name ($!)\n");
  open(my $ufh, ">$name.n") || die("Can't open file: $name ($!)\n");
  while (my $l = <$fh>) {
    $l =~ s/"\d\.\d\.\d"/"$ver"/ if ($l =~ /"version"\s*:\s*"\d\.\d\.\d"/);
    print $ufh $l;
  }
  close($fh);
  close($ufh);
  rename("$name.n", $name);
}

sub updateOptions {
  my $ver  = shift;
  my $name = 'html/options.html';

  open(my $fh, $name) || die("Can't open file: $name ($!)\n");
  open(my $ufh, ">$name.n") || die("Can't open file: $name ($!)\n");
  while (my $l = <$fh>) {
    $l =~ s/>v\d\.\d\.\d</>v$ver</ if ($l =~ /span data-version/);
    print $ufh $l;
  }
  close($fh);
  close($ufh);
  rename("$name.n", $name);
}

sub usage {
  my $myname = $0;
  $myname =~ s|.*/||;
  die <<EOM
Usage: $myname -v [-u] [-z]
  where:
    -u: Update version number in files: options.html, manifest.json, and
        package.json
    -v: New version number for the extension (Format: x.x.x)
    -z: Create zip file
EOM
}

